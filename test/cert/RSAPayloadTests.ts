import {RSAPayload} from "../../src/cert/RSAPayload";


describe('RSAPayloadd test', () => {
    it('should verify payload', () => {

        var certificate = [
            48, 130, 1, 205, 48, 130, 1, 54, 160, 3, 2, 1, 2, 2, 8, 9, 1, 37, 91, 11, 105, 185, 178, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 11, 5, 0, 48, 39, 49, 37, 48, 35, 6, 3, 85, 4, 3, 19, 28, 119, 119, 119, 46, 113, 119, 114, 101, 119, 101, 53, 103, 117, 111, 54, 55, 111, 106, 99, 97, 54, 105, 117, 111, 46, 99, 111, 109, 48, 30, 23, 13, 50, 48, 48, 50, 49, 48, 48, 51, 52, 51, 53, 51, 90, 23, 13, 50, 49, 48, 50, 48, 57, 48, 51, 52, 51, 53, 51, 90, 48, 39, 49, 37, 48, 35, 6, 3, 85, 4, 3, 19, 28, 119, 119, 119, 46, 113, 119, 114, 101, 119, 101, 53, 103, 117, 111, 54, 55, 111, 106, 99, 97, 54, 105, 117, 111, 46, 99, 111, 109, 48, 129, 159, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 129, 141, 0, 48, 129, 137, 2, 129, 129, 0, 214, 113, 96, 45, 201, 124, 4, 106, 77, 175, 137, 199, 147, 226, 186, 187, 60, 94, 56, 249, 243, 107, 59, 62, 202, 111, 72, 167, 187, 175, 64, 56, 248, 78, 34, 99, 232, 119, 144, 39, 248, 129, 157, 229, 217, 175, 85, 191, 106, 143, 51, 150, 185, 132, 99, 209, 145, 41, 163, 96, 83, 181, 185, 26, 129, 142, 22, 117, 31, 172, 125, 36, 79, 169, 156, 221, 110, 198, 210, 129, 56, 87, 174, 144, 131, 198, 38, 153, 12, 186, 128, 68, 253, 120, 169, 30, 88, 223, 34, 170, 39, 93, 63, 84, 130, 59, 167, 138, 134, 48, 197, 101, 152, 218, 108, 17, 83, 116, 95, 81, 130, 189, 245, 104, 210, 199, 77, 249, 2, 3, 1, 0, 1, 163, 2, 48, 0, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 11, 5, 0, 3, 129, 129, 0, 131, 27, 222, 16, 135, 142, 33, 88, 79, 159, 155, 102, 168, 211, 39, 178, 56, 92, 174, 183, 108, 173, 190, 91, 80, 129, 105, 215, 42, 248, 109, 232, 88, 133, 76, 117, 22, 20, 7, 19, 243, 189, 129, 86, 41, 17, 3, 236, 145, 132, 253, 201, 211, 107, 10, 6, 138, 148, 131, 194, 6, 5, 59, 38, 18, 172, 105, 133, 127, 161, 217, 48, 37, 136, 245, 102, 23, 88, 226, 181, 42, 175, 168, 54, 239, 239, 138, 109, 109, 200, 133, 31, 220, 17, 153, 138, 131, 22, 24, 214, 233, 43, 135, 160, 129, 134, 15, 101, 57, 228, 76, 27, 105, 176, 56, 26, 25, 29, 53, 116, 72, 22, 129, 26, 195, 30, 29, 177, ];

        var msg = [
            0, 0, 0, 0, 95, 48, 25, 185, 0, 0, 0, 0, 95, 88, 248, 57, 13, 173, 81, 64, 162, 113, 153, 153, 161, 248, 221, 93, 102, 65, 233, 67, 143, 112, 240, 250, 40, 146, 83, 26, 0, 39, 186, 107, 23, 14, 28, 27, 0, 64, 112, 115, 112, 46, 111, 110, 105, 111, 110, 46, 110, 111, 100, 101, 46, 55, 117, 99, 50, 75, 118, 103, 87, 115, 105, 86, 84, 99, 56, 107, 70, 70, 109, 103, 70, 75, 66, 104, 121, 107, 99, 109, 118, 105, 80, 121, 118, 97, 76, 102, 67, 83, 78, 117, 121, 112, 54, 106, 70, 104, 56, 87, 65, 85, 0, 0, ];

        var signature = [
            77, 210, 239, 228, 58, 101, 144, 77, 165, 242, 249, 244, 28, 86, 46, 248, 186, 101, 166, 202, 154, 54, 93, 134, 25, 143, 96, 216, 227, 207, 235, 24, 38, 212, 111, 43, 4, 187, 80, 22, 141, 109, 252, 24, 81, 154, 39, 238, 6, 54, 235, 89, 142, 98, 247, 98, 93, 48, 57, 190, 70, 135, 38, 175, 68, 217, 216, 1, 38, 16, 27, 35, 30, 41, 233, 156, 177, 140, 37, 184, 79, 180, 190, 144, 198, 233, 122, 250, 102, 137, 159, 138, 201, 168, 79, 206, 223, 70, 166, 124, 190, 94, 252, 44, 191, 149, 32, 226, 52, 101, 194, 183, 71, 79, 63, 190, 65, 31, 66, 58, 82, 147, 224, 189, 154, 126, 240, 246, ];


        let rsPayLoad = new RSAPayload();
        rsPayLoad.Certificate = Buffer.from(certificate);
        rsPayLoad.Signature = Buffer.from(signature);
        rsPayLoad.verify(Buffer.from(msg));

       // expect(fp).to.eql(Buffer.from(result));
    })
});